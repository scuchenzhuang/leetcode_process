给出一个区间的集合，请合并所有重叠的区间。

示例 1:

输入: [[1,3],[2,6],[8,10],[15,18]]
输出: [[1,6],[8,10],[15,18]]
解释: 区间 [1,3] 和 [2,6] 重叠, 将它们合并为 [1,6].
示例 2:

输入: [[1,4],[4,5]]
输出: [[1,5]]
解释: 区间 [1,4] 和 [4,5] 可被视为重叠区间。

class Solution {
    public int[][] merge(int[][] intervals) {
        List<int[]> list=new ArrayList<int[]>();
        int len=intervals.length;//此处intervals是一个 以int[]为元素，有多个行一个列的二维数组
        if(len==0)
            return new int[0][];
        Arrays.sort(intervals,(a,b)->a[0]-b[0]);//定义了新排序方法，此处a[0]-b[0]为负数就是升序，为正数就是降序
        int i=0;//定义一个i的指针
        //合并的规律：先排序，每一个区间的左边一定是最小的数，但是右边应该等于Max(A[1],B[1]) B是A之后的一个区间
        while(i<len)
        {
            int left=intervals[i][0];
            int right=intervals[i][1];
            while(i<len&&right>=intervals[i+1][0])
            {
                right=Math.max(intervals[i+1][1],right);
                i++;
            }//寻找可以的区间
         
            list.add(new int[]{left,right});
            i++;
        }
        return list.toArray(new int[0][]);//关于list.toArray()此处类似于Stirng[0]的设定，具体我将在自己的文档写明
    }
}
