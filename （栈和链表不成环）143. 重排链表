给定一个单链表 L：L0→L1→…→Ln-1→Ln ，
将其重新排列后变为： L0→Ln→L1→Ln-1→L2→Ln-2→…

你不能只是单纯的改变节点内部的值，而是需要实际的进行节点交换。

示例 1:

给定链表 1->2->3->4, 重新排列为 1->4->2->3.
示例 2:

给定链表 1->2->3->4->5, 重新排列为 1->5->2->4->3.




class Solution {
    public void reorderList(ListNode head) {
    if(head==null)
    return;
    ListNode p=head;//用p来存储head,负责链表的节点移动
    int len=0;//len存储链表有多少个
    Stack<ListNode> a=new Stack<ListNode>();
    //本道题的解法就是1->2->3->4->5   先用栈压入，先进后出。接着以1开头让1.next=5,接着让5.next=2这样循环下去，始终保证结束的时候4->3
    while(p!=null)
    {
    a.push(p);
    p=p.next;
    len++;
    }
    p=head;
    for(int i=0;i<len/2;i++)
    {
    ListNode next=p.next;
    p.next=a.pop();
    p.next.next=next;
    p=next;
    }
    p.next=null;//最后防止链表承欢
    return;
}}
